[1. 연산자의 종류]
- 산술연산자: +, -, *, /, %(나머지), <<, >>
- 비교연산자: >, <, >=, <=, ==, !=
- 논리연산자: &&, ||, !
- 대입연산자: =, ++, --
- 기타연산자: (type), ? :, instance of

[2. 연산자 우선 순위 : 산술 > 비교 > 논리 > 대입]
- 연산자 여러 개가 함께 있는 연산을 계산할 때는 우선 순위가 있습니다.
- 위 우선 순위에 따라서 최종적인 응답값이 결정됩니다.
- 단, 괄호로 감싸주면 괄호 안의 연산이 최우선순위로 계산됩니다.

[3. 산술연산 시 타입 일치]
- 연산 전에 두 피연산자의 타입이 다른 경우 타입을 일치시킵니다. (둘 중 저장공간 크기가 더 큰 타입으로 일치)
    - 피연산자의 타입이 `int` 보다 작은 `short` 타입이면 `int`로 변환
    - 피연산자의 타입이 `long` 보다 작은 `int`, `short` 타입이면 `long`으로 변환
    - 피연산자의 타입이 `float` 보다 작은 `long`, `int`, `short` 타입이면 `float`로 변환
    - 피연산자의 타입이 `double` 보다 작은 `float`, `long`, `int`, `short` 타입이면 `double`로 변환
    - 이처럼, 변수 여러개를 연산했을 때 결과 값은 피연산자 중 표현 범위가 가장 큰 변수 타입을 가지게 됩니다.

[4. 비트연산자]
- 비트 연산
    - Byte 를 8등분 한 게 Bit
    - Bit는 0,1 둘 중 하나의 값만을 저장하는 컴퓨터가 저장(표현)가능한 가장 작은 단위
    - 컴퓨터의 가장 작은 단위인 Bit이기 때문에 연산 중에서 Bit 연산이 제일 빠름.
    - 물론 이전에 배운대로 0,1 값으로 산술 연산을 하거나, 비교 연산을 할 수 있지만 비트 연산을 통해 자리수를 옮길 수 도 있음
    - 이처럼 Bit의 자리수를 옮기는 것을 비트 연산이라고 합니다.
    - `<<`(왼쪽으로 자리수 옮기기), `>>`(오른쪽으로 자리수 옮기기)
        - 자리수를 왼쪽으로 옮기는 횟수만큼 2의 배수로 곱셈이 연산되는 것과 동일합니다.
        - 자리수를 오른쪽으로 옮기는 횟수만큼 2의 배수로 나눗셈이 연산되는 것과 동일합니다.